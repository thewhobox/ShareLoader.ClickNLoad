@model CheckViewModel
@{
    ViewData["Title"] = "Download hinzufügen";
}
<style>

    .form-container table {
        width: 100%;
        margin-top: 30px;
    }

    .form-container input {
        width: 100%;
    }

    .form-container tr.input td {
        width: 50%;
    }

    li.alert {
        background-color: #fc5252;
    }


    #searchResults img {
        border: 3px solid transparent;
        font-size: 13px;
        float: left;
        width: 113px;
        height: 180px;
    }

    #searchResults img.selected {
        border: 3px solid green;
        box-shadow: none !important;
    }

    .card {
        width: 350px;
        margin: 5px;
        float: left;
    }

    .card .card-header.bg-red .check {
        display:none;
    }

    .card .card-footer {
        display: block;
        min-height: auto;
        padding: 0;
    }

    .card .card-footer button {
        display: block;
        width: 100%;
    }

    .card .card-footer > div {
        position: absolute;
        z-index: 1000;
        background-color: white;
        width: 100%;
        border: 1px solid gray;
        box-shadow: rgb(95, 95, 95) 0px 6px 10px 5px;
    }

    .card ul {
        list-style-type: none;
        margin: 0;
        padding: 0 10px;
        overflow-x: scroll;
    }
</style>



<form asp-controller="Downloads" asp-action="AddDlcConfirm" data-role="validator" method="post" enctype="multipart/form-data">
    <div class="grid">
        <div class="row">
            <div class="cell">
                <div class="form-container" style="height: 100%">
                    <h2>DLC Hinzufügen</h2>
                    <hr />

                    <div class="form-group">
                        <label asp-for="Name"></label>
                        <input asp-for="Name" placeholder="Name des Downloads" maxlength="200" data-validate="required maxlength=200" autocomplete="off" />
                        <span class="invalid_feedback">
                            Bitte gib einen Namen ein. Maximal 200 Zeichen.
                        </span>
                        <small class="text-muted">Name wird nur zum Anzeigen verwendet.</small>
                    </div>
                    <div class="form-group">
                        <label asp-for="Password"></label>
                        <input asp-for="Password" autocomplete="off" placeholder="Passwort zum Entpacken" />
                    </div>
                    <div class="form-group">
                        <label asp-for="Type"></label>
                        <select asp-for="Type" asp-items="Html.GetEnumSelectList<DownloadType>()" data-validate="required not=0"></select>
                        <span class="invalid_feedback">
                            Bitte wähle einen Typ aus.
                        </span>
                    </div>

                    <div class="form-group">
                        <label for="nameToSort">Sortieren</label>
                        <input id="nameToSort" name="nameToSort" type="text" data-validate="required" readonly="readonly" />
                        <small class="text-muted">Nicht bearbeiten!</small>
                    </div>

                    <div class="form-group">
                        <button class="button success disabled">Download hinzufügen</button>
                        <a asp-action="Index" class="button">Abbrechen</a>
                    </div>
                </div>
            </div>

            <div class="cell">
                <div class="form-container" style="height: 100%">
                    <h2>Sortieren</h2>
                    <hr />

                    <div id="searchBar" style="visibility:hidden" data-role="progress" data-type="line" data-small="true"></div>

                    <div class="form-group">
                        <input id="inSearch" type="text" placeholder="Suche nach der Serie/Film" value="@Model.Search" disabled="disabled" autocomplete="off" />
                        <small class="text-muted">Suchtext oder Imdb-ID</small>
                    </div>


                    <div id="searchResults">

                    </div>

                    <div style="clear:both;">
                        <a href="javascript:searchBack()" class="button">Zurück</a>
                        <span id="currentPage">0</span> / <span id="totalPage">1</span>
                        <a href="javascript:searchNext()" class="button">Weiter</a>
                    </div>

                    <div class="form-group" id="inSeasonD" style="clear:both;display:none">
                        <select id="inSeason" disabled="disabled"></select>
                    </div>

                </div>
            </div>
        </div>
    </div>

    <div id="InfoBox">
        Verarbeite Links: <span id="InfoProgress">0</span>/@Model.RawLinksCount
    </div>

    <div id="LinkGrid" class="grid">
    </div>
    
</form>

@section Scripts {

    <script>
        let stype = "";
        let season = 0;
        let imdbid = "";
        let currentPage = 1;
        let totalPage = 0;
        let links = "@Html.Raw(Model.RawLinks)".split(',');
        let currentCheckIndex = 0;

        $(document).ready(function () {
            initTable();
            checkSearch();
            checkSeason();
            checkLinks();
        });

        function initTable() {
            for(let i = 0; i < links.length; i++)
            {
                let domain = links[i].substring(8);
                domain = domain.substring(0, domain.indexOf('/'));
                console.log(domain);
                domain = domain.replace('.', "%2E");
                let id = links[i].substring(7 + domain.length);
                if(id.indexOf('/') != -1)
                    id = id.substring(0, id.indexOf('/'));

                $("#LinkGrid").append("<div class='row' data-id='" + id + "'><div class='cell'><input type='checkbox' data-role='checkbox' />" + id + "</div><div class='cell state'>Wartet</div><div class='cell-3 name'>-</div><div class='cell size'>0 Bytes</div></div>");
            }
        }

        $(".card-header input[type=checkbox]").change(function () {
            let isChecked = $(".card-header input[type=checkbox]").prop("checked");
            let group = $(this).attr("data-group");

            if (isChecked)
                $(".card[data-group=" + group + "] .card-footer input").attr("checked", "checked");
            else
                $(".card[data-group=" + group + "] .card-footer input").removeAttr("checked");
        });

        $("#inSearch").keyup(function () {
            let query = $("#inSearch").val();
            let patt = new RegExp("tt([0-9]{3,7})+");
            let res = patt.test(query);

            if (res) {
                imdbid = query;
                getSeasons(query, true);
            } else {
                imdbid = "";
                currentPage = 1;
                search();
                $("input[name=nameToSort]").attr("value", query.replace(" ", "."));
            }
        });

        $("#inSeason").change(function () {
            if ($("#inSeason").val() != "select")
                setName();
            else
                setname("none");
        });

        $("#Type").change(function () {
            setName("none");
            checkSearch();
        });

        function checkLinks() {
            $("#InfoProgress").html(currentCheckIndex);
            if(currentCheckIndex == links.length)
            {
                $("button.success").removeClass("disabled");
                return;
            }
            let item = links[currentCheckIndex];
            getInfoDDL(item);
            currentCheckIndex++;
        }

        function getInfoDDL(url) {
            let domain = url.substring(8);
            domain = domain.substring(0, domain.indexOf('/'));
            domain = domain.replace('.', "%2E");
            let id = url.substring(7 + domain.length);
            if(id.indexOf('/') != -1)
                id = id.substring(0, id.indexOf('/'));
                
            $("div.row[data-id=" + id + "] div.state").html("Abfragen");
            console.log(id);
            $.getJSON("http://localhost:9666/flash/itemInfo/" + id + "?domain=" + domain, function (data) {
                let ele = $("div.row[data-id=" + id + "]");
                $("div.state", ele).html(data.isOnline ? "Online" : "Offline");
                $("div.name", ele).html(data.name);

                let expos = [ "B", "KB", "MB", "GB" ];
                let expo = 0;
                let size = data.size;
                while(size >= 1024)
                {
                    expo++;
                    size = size / 1024;
                }
                $("div.size", ele).html(Math.round(size) + " " + expos[expo]);
                checkLinks();
            });
        }

        function checkSeason() {
            let query = $("#Name").val();
            let patt = new RegExp("S([0-9]{1,2})+");
            let res = patt.exec(query);

            if (res == null)
                return;

            season = res[1];
        }

        function checkSearch() {
            $("#inSeason").html("");
            switch ($("#Type").val()) {
                case "1":
                    stype = "movie";
                    console.log("Film");
                    $("#inSearch").removeAttr('disabled');
                    $("#inSeasonD").css("display", "none");
                    $("#nameToSort").removeAttr('disabled');
                    $("#nameToSort").attr('data-validate', 'required');
                    break;
                case "2":
                    stype = "series";
                    console.log("Serie");
                    $("#inSearch").removeAttr('disabled');
                    $("#inSeasonD").css("display", "block");
                    $("#nameToSort").removeAttr('disabled');
                    $("#nameToSort").attr('data-validate', 'required');
                    break;
                case "3":
                    stype = "";
                    console.log("Anderes");
                    $("#inSearch").attr('disabled', 'disabled');
                    $("#inSeasonD").css("display", "none");
                    $("#nameToSort").attr('disabled', 'disabled');
                    $("#nameToSort").removeAttr('data-validate');
                    break;
                default:
                    $("#inSearch").attr('disabled', 'disabled');
                    $("#inSeasonD").css("display", "none");
                    $("#nameToSort").attr('disabled', 'disabled');
                    $("#nameToSort").removeAttr('data-validate');
                    break;
            }
            currentPage = 1;
            search();
        }

        function searchBack() {
            if (currentPage == 1)
                return;

            currentPage -= 1;
            search();
        }

        function searchNext() {
            currentPage += 1;
            search();
        }

        function search() {
            $("#currentPage").html(currentPage);
            $("#searchBar").css("visibility", "visible");
            let query = $("#inSearch").val();
            $.getJSON("https://www.omdbapi.com/?apikey=e4e995ba&s=" + query + "&type=" + stype + "&page=" + currentPage, function (data) {
                console.log(data);
                $("#searchResults").html("");
                if (data.Response == "False") {
                    $("#searchResults").html(data.Error);
                    $("#searchBar").css("visibility", "hidden");
                    return;
                }

                totalPage = Math.ceil(data.totalResults / 10);
                $("#totalPage").html(totalPage);

                for (i = 0; i < data.Search.length; i++) {
                    var item = data.Search[i];
                    let poster = item.Poster;
                    if (poster == "N/A")
                        poster = "http://www.citypages.com/img/movie-placeholder.gif";
                    $("#searchResults").append('<img onerror="javascript:imgFail(this);" title="' + item.Title + '" alt="' + item.Title + '" src="' + poster + '" data-imdbid="' + item.imdbID + '" data-sort="' + item.Title + '" data-year="' + item.Year + '">');
                }
                addClick();
                $("#searchBar").css("visibility", "hidden");
            });
        }

        function imgFail(ele) {
            $(ele).attr("src", "http://www.citypages.com/img/movie-placeholder.gif");
        }

        function addClick() {
            $("#searchResults img").click(function () {
                $("#searchResults img").removeClass("selected");
                var t = $(this);
                t.addClass("selected")
                imdbid = t.attr("data-imdbid");

                if ($("#Type").val() == "2") {
                    getSeasons(t.attr("data-imdbid"));
                    setName("none");
                } else {
                    setName(t.attr("data-sort"), t.attr("data-year"));
                }
            });
        }

        function getSeasons(imdbid, addName = false) {
            $.getJSON("https://www.omdbapi.com/?apikey=e4e995ba&i=" + imdbid, function (data) {
                if (data.Response == "False") {
                    alert("Imdb ID nicht gefunden");
                    setName("none");
                    return;
                }

                if (addName) {
                    setName(data.Title, data.Year);
                    $("#serachResults").html(data.Title);
                }

                $("#inSeason").html("");
                $("#inSeason").append("<option value=\"select\">Bitte Staffel auswählen</option>");
                $("#inSeason").append("<option value=\"dynamisch\">Staffelpaket</option>");
                for (let i = 1; i <= data.totalSeasons; i++) {
                    let iteration = i;
                    if (iteration < 10)
                        iteration = "0" + i;
                    if (iteration == season) {
                        $("#inSeason").append("<option value=\"" + iteration + "\" selected>Staffel " + iteration + "</option>");
                        setName();
                    }
                    else
                        $("#inSeason").append("<option value=\"" + iteration + "\">Staffel " + iteration + "</option>");
                }

                $("#inSeason").prop("disabled", false);
            });
        }

        function setName(name = "", year = 0) {
            if (name == "none") {
                $("input[name=nameToSort]").attr("value", "");
                return;
            }

            let sort = name;
            console.log(sort);
            if (sort == "")
                sort = $("#searchResults img.selected").attr("data-sort");
            console.log(sort);

            if ($("#Type").val() == "2") {
                sort = sort + "/" + "Staffel " + $("#inSeason").val();
            } else {
                if (year == 0)
                    sort = sort + " " + $("#searchResults img.selected").attr("data-year");
                else
                    sort = sort + "(" + year + ")";

                if (imdbid != "")
                    sort = sort + "[imdbid=" + imdbid + "]";

                console.log("id: " + imdbid);

                while (sort.indexOf(" ") != -1) {
                    sort = sort.replace(" ", ".");
                }
            }
            
            
            
            $("input[name=nameToSort]").attr("value", sort);
        }
    </script>

    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}